
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.2.1
 * Query Engine version: 4123509d24aa4dede1e864b46351bf2790323b69
 */
Prisma.prismaVersion = {
  client: "6.2.1",
  engine: "4123509d24aa4dede1e864b46351bf2790323b69"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RAW_MATERIALSScalarFieldEnum = {
  id: 'id',
  name: 'name',
  SKU: 'SKU',
  quantity: 'quantity',
  price: 'price',
  image: 'image',
  description: 'description',
  expiry_date: 'expiry_date',
  quality_status: 'quality_status',
  storage_location: 'storage_location',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.SHOPIFY_VARIANTSScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  name: 'name',
  AvailableQty: 'AvailableQty',
  img: 'img',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt',
  variantName: 'variantName',
  variantOption: 'variantOption'
};

exports.Prisma.VARIANT_RAW_MATERIALS_TRACKERScalarFieldEnum = {
  variantId: 'variantId',
  rawMaterialId: 'rawMaterialId',
  avgQuantity: 'avgQuantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.CATEGORIESScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SHOPIFY_PRODUCTSScalarFieldEnum = {
  id: 'id',
  name: 'name',
  categoryId: 'categoryId',
  price: 'price',
  status: 'status',
  img: 'img',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RM_TRANSACTIONSScalarFieldEnum = {
  id: 'id',
  rawMaterialId: 'rawMaterialId',
  quantity: 'quantity',
  transactionType: 'transactionType',
  reason: 'reason',
  status: 'status',
  initiatedById: 'initiatedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.RM_QCScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  rawMaterialId: 'rawMaterialId',
  quality_status: 'quality_status',
  checkedById: 'checkedById',
  doneById: 'doneById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.RM_WASTAGE_LOGSScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  rawMaterialId: 'rawMaterialId',
  quantity: 'quantity',
  reason: 'reason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.WIPScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WIP_PRODUCTSScalarFieldEnum = {
  id: 'id',
  wipId: 'wipId',
  productId: 'productId',
  quantity: 'quantity'
};

exports.Prisma.WIPRawMaterialScalarFieldEnum = {
  id: 'id',
  wipId: 'wipId',
  rawMaterialId: 'rawMaterialId',
  quantity: 'quantity'
};

exports.Prisma.FGScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  customerName: 'customerName',
  price: 'price',
  status: 'status',
  createdAt: 'createdAt',
  deliveryDate: 'deliveryDate'
};

exports.Prisma.FG_PRODUCTSScalarFieldEnum = {
  id: 'id',
  fgId: 'fgId',
  productId: 'productId',
  quantity: 'quantity'
};

exports.Prisma.WIP_TRANSACTIONSScalarFieldEnum = {
  id: 'id',
  wipId: 'wipId',
  quantity: 'quantity',
  transactionType: 'transactionType',
  reason: 'reason',
  status: 'status',
  initiatedById: 'initiatedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FG_TRANSACTIONSScalarFieldEnum = {
  id: 'id',
  fgId: 'fgId',
  quantity: 'quantity',
  transactionType: 'transactionType',
  status: 'status',
  reason: 'reason',
  IntiatedById: 'IntiatedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.WIP_QCScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  transactionType: 'transactionType',
  wipId: 'wipId',
  quality_status: 'quality_status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FG_QCScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  transactionType: 'transactionType',
  fgId: 'fgId',
  quality_status: 'quality_status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WIP_WASTAGE_LOGSScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  transactionType: 'transactionType',
  wipId: 'wipId',
  quantity: 'quantity',
  reason: 'reason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FG_WASTAGE_LOGSScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  transactionType: 'transactionType',
  fgId: 'fgId',
  quantity: 'quantity',
  reason: 'reason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuditLogsScalarFieldEnum = {
  id: 'id',
  tableName: 'tableName',
  action: 'action',
  oldValue: 'oldValue',
  newValue: 'newValue',
  changedById: 'changedById',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.RAW_MATERIALSOrderByRelevanceFieldEnum = {
  name: 'name',
  SKU: 'SKU',
  image: 'image',
  description: 'description',
  storage_location: 'storage_location'
};

exports.Prisma.SHOPIFY_VARIANTSOrderByRelevanceFieldEnum = {
  name: 'name',
  img: 'img',
  variantName: 'variantName',
  variantOption: 'variantOption'
};

exports.Prisma.CATEGORIESOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.SHOPIFY_PRODUCTSOrderByRelevanceFieldEnum = {
  name: 'name',
  status: 'status',
  img: 'img'
};

exports.Prisma.RM_TRANSACTIONSOrderByRelevanceFieldEnum = {
  reason: 'reason',
  status: 'status'
};

exports.Prisma.RM_WASTAGE_LOGSOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.EmployeeOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.FGOrderByRelevanceFieldEnum = {
  customerName: 'customerName'
};

exports.Prisma.WIP_TRANSACTIONSOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.FG_TRANSACTIONSOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.WIP_WASTAGE_LOGSOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.FG_WASTAGE_LOGSOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.AuditLogsOrderByRelevanceFieldEnum = {
  tableName: 'tableName'
};
exports.QualityStatus = exports.$Enums.QualityStatus = {
  GOOD: 'GOOD',
  AVERAGE: 'AVERAGE',
  POOR: 'POOR'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  IN: 'IN',
  OUT: 'OUT',
  CREDITED: 'CREDITED',
  DEBITED: 'DEBITED'
};

exports.Roles = exports.$Enums.Roles = {
  ADMIN: 'ADMIN',
  EMPLOYEE: 'EMPLOYEE'
};

exports.Status = exports.$Enums.Status = {
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

exports.Actions = exports.$Enums.Actions = {
  INSERT: 'INSERT',
  UPDATE: 'UPDATE',
  DELETE: 'DELETE'
};

exports.Prisma.ModelName = {
  RAW_MATERIALS: 'RAW_MATERIALS',
  SHOPIFY_VARIANTS: 'SHOPIFY_VARIANTS',
  VARIANT_RAW_MATERIALS_TRACKER: 'VARIANT_RAW_MATERIALS_TRACKER',
  CATEGORIES: 'CATEGORIES',
  SHOPIFY_PRODUCTS: 'SHOPIFY_PRODUCTS',
  RM_TRANSACTIONS: 'RM_TRANSACTIONS',
  RM_QC: 'RM_QC',
  RM_WASTAGE_LOGS: 'RM_WASTAGE_LOGS',
  Employee: 'Employee',
  WIP: 'WIP',
  WIP_PRODUCTS: 'WIP_PRODUCTS',
  WIPRawMaterial: 'WIPRawMaterial',
  FG: 'FG',
  FG_PRODUCTS: 'FG_PRODUCTS',
  WIP_TRANSACTIONS: 'WIP_TRANSACTIONS',
  FG_TRANSACTIONS: 'FG_TRANSACTIONS',
  WIP_QC: 'WIP_QC',
  FG_QC: 'FG_QC',
  WIP_WASTAGE_LOGS: 'WIP_WASTAGE_LOGS',
  FG_WASTAGE_LOGS: 'FG_WASTAGE_LOGS',
  AuditLogs: 'AuditLogs'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
